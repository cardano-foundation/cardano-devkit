name: ðŸš¢ Ship Release Artifacts

on:
  workflow_dispatch:
  release:
    types: [ created ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        target:
          macos-latest: [aarch64-apple-darwin, x86_64-apple-darwin]
          ubuntu-latest: [x86_64-unknown-linux-gnu]
          windows-latest: [x86_64-pc-windows-msvc]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ join(matrix.target[matrix.platform], ',') }}

      - name: Cache Rust artifacts
        uses: swatinem/rust-cache@v2
        with:
          workspaces: true

      - name: Install frontend dependencies
        run: npm i

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --target ${{ join(matrix.target[matrix.platform], ',') }}

      - name: Generate SHA-256 checksum
        run: |
          cd system/target/release/bundle/
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            for file in *; do
              CertUtil -hashfile "$file" SHA256 > "$file.sha256"
            done
          else
            for file in *; do
              sha256sum "$file" > "$file.sha256"
            done
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: system/target/release/bundle/
          
      - name: Publish Release
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          releaseBody: "See the assets to download this version."
          releaseDraft: false
          prerelease: false